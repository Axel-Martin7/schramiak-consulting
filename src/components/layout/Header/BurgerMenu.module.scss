@import '@/styles/variables';
@import '@/styles/mixins';

.burgerContainer {
  width: 64px;
  height: 64px;
  padding: 8px;
  border-radius: 50%;
  box-shadow: inset 0 0 2px rgba(28, 32, 36, 0.4),
    inset -2px 2px 6px rgba(28, 32, 36, 0.6),
    2px -2px 6px rgba(28, 32, 36, 0.15), -2px 2px 4px white;
  /*------------------ Tablet ------------------*/
  @media screen and (min-width: 1024px) {
    display: none;
  }

  //---------- Style par default du bouton burger :
  .burgerButton {
    width: 100%;
    height: 100%;
    padding: 16px; // Zone interne de 32px
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    border-radius: inherit;
    background: linear-gradient(
      45deg,
      $color-slate-grey-2 0%,
      $color-slate-grey-1 100%
    );
    box-shadow: 0 0 2px rgba(28, 32, 36, 0.2), inset -2px 2px 3px white,
      inset 2px -2px 2px rgba(28, 32, 36, 0.2),
      -2px 2px 6px rgba(28, 32, 36, 0.8);
    cursor: pointer;
    transition: background 0.5s, box-shadow 0.5s;
    // Effet "pressé" transitoire : Appliqué quand l'utilisateur clique sur le bouton :
    &:active {
      background: linear-gradient(
        45deg,
        $color-slate-grey-2 0%,
        $color-slate-grey-3 100%
      );
      box-shadow: -2px 2px 6px rgba(28, 32, 36, 0.2),
        inset 0 0 1px rgba(28, 32, 36, 0.6),
        inset -2px 2px 3px rgba(28, 32, 36, 0.2), -2px 2px 3px white;
    }
    &:hover .burgerLinesContainer .line {
      background-color: #00b0bd;
      transition: background-color 0.5s ease;
    }

    .burgerLinesContainer {
      position: relative; // Nécessaire pour postionner les lignes en mode "open"
      width: 100%;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      transition: transform 0.5s;

      .line {
        width: 100%;
        height: 2px;
        background-color: $color-slate-grey-8;
        border-radius: 2px;
        box-shadow: inset -0.25px 0.25px 0.5px rgba(28, 32, 36, 0.8),
          inset 0.25px -0.25px 0.5px white;
        transition: transform 0.5s ease, opacity 0.5s ease, width 0.5s ease;
      }

      &.open {
        transform: rotate(180deg); // Rotation globale du conteneur

        .line {
          background-color: #00b0bd;
          transition: background-color 0.5s ease;
        }

        .line:nth-child(1) {
          position: absolute;
          top: 50%;
          left: 0;
          transform: translateY(-50%) rotate(45deg);
          width: 100%; // Limité à 32px (la zone interne)
        }
        .line:nth-child(2) {
          opacity: 0;
          transform: scaleX(0);
        }
        .line:nth-child(3) {
          position: absolute;
          top: 50%;
          left: 0;
          transform: translateY(-50%) rotate(-45deg);
          width: 100%;
        }
      }
    }
  }
}

//*---------------- PANNEAU DEROULANT ----------------*
// Le panneau est toujours rendu, mais il est positionné hors écran (vers le haut) lorsque la classe 'open' n'est pas présente.
.dropdownPanel {
  z-index: 900; // Inférieur à celui du header (1000)
  position: fixed;
  top: 80px; // Hauteur du header (ajustez cette valeur selon votre design)
  left: 0;
  right: 0;
  bottom: 0;
  transform: translateY(-100%);
  padding: 32px;
  display: flex;
  flex-direction: column;
  justify-content: space-evenly;
  gap: 32px;
  background: linear-gradient(
    45deg,
    $color-slate-grey-4 0%,
    $color-slate-grey-2 80%
  );
  overflow-y: auto;
  transition: transform 0.5s ease-in-out;

  .socialContainer {
    position: relative;
    display: flex;
    justify-content: center;
    gap: 16px;
    &::before {
      content: '';
      z-index: -1;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: 2px;
      border-radius: 16px;
      box-shadow: inset 0px 1px 1px rgba(28, 32, 36, 0.1),
        inset 0 -1px 1px white;
    }
  }
}

//---------- Classe ajoutée lorsque le menu est ouvert :
.dropdownPanel.open {
  transform: translateY(0);
}
